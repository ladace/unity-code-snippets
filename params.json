{"name":"Unity-code-snippets","tagline":"","body":"# Code Snippets for Unity\r\n\r\n**To use the script, you must create a script that has the same name as the class name (which is the word after `class` word.**\r\n\r\nFor example,\r\n\r\n```csharp\r\npublic class MyClassName : MonoBehaviour {\r\n    void Start () {\r\n        Debug.Log(\"Hello, world\");\r\n    }\r\n}\r\n```\r\n\r\nYou have to create a file called `MyClassName`, otherwise you can change the word after `class` to the name of the file.\r\n\r\n**The file name must be the same as the class name.**\r\n\r\n### Press button to load the game in titlescreen\r\n\r\nReplace \"Game\" with whatever you name for your game level (in double quotes).\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Title : MonoBehaviour {\r\n\t\r\n\t// Update is called once per frame\r\n\tvoid Update () {\r\n\t\tif (Input.GetButtonDown (\"Submit\")) {\r\n\t\t\tApplication.LoadLevel (\"Game\");\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n### Activate/Deactivate a object on clicking a collider\r\n\r\nAttach the following script to a object that has at least one collider.\r\nAssign `theObject` with the object you want to activate/deactivate.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Switch : MonoBehaviour {\r\n\r\n\tpublic GameObject theObject;\r\n\r\n\tvoid OnMouseDown () {\r\n\t\tif (theObject.activeSelf)\r\n\t\t\ttheObject.SetActive (false);\r\n\t\telse\r\n\t\t\ttheObject.SetActive (true);\r\n\t}\r\n}\r\n```\r\n\r\n### Shooting\r\n\r\nAssign a prefab as the archetype of bullets to the bullet field of this component.\r\nThe bullet prefab needs to have a Rigidbody on it.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Shooter : MonoBehaviour {\r\n\r\n\tpublic GameObject bulletPrefab;\r\n\tpublic float bulletSpeed;\r\n\t\t\r\n\t// Update is called once per frame\r\n\tvoid Update () {\r\n\t\tif (Input.GetButtonDown (\"Fire1\")) {\r\n\t\t\tVector3 direction = GetComponentInChildren<Camera>().transform.TransformDirection(Vector3.forward);\r\n\t\t\tGameObject obj = Instantiate (bulletPrefab, transform.position + direction * 2, Quaternion.identity) as GameObject;\r\n\t\t\tobj.GetComponent<Rigidbody>().velocity = bulletSpeed * direction;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\n\r\n### Encounter\r\n\r\nAttach this to an object with a trigger (collider with `Is Trigger` toggled on).\r\nAssign an object to `blockerObject`. It will deactivate the object.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Encounter : MonoBehaviour {\r\n\tpublic GameObject blockerObject;\r\n\t\r\n\tvoid OnTriggerEnter (Collider collider) {\r\n\t\tif (collider.tag == \"Player\") {\r\n\t\t\tblockerObject.SetActive (false);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n### Object that keeps moving to a direction\r\n\r\nIt will check if the object has a Rigidbody. If so, use the Rigidbody component to move; otherwise just change the position of the Transform component.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class MovingAlong : MonoBehaviour {\r\n\tpublic Vector3 direction;\r\n\t\r\n\tvoid Update () {\r\n\t\tRigidbody rd = GetComponent<Rigidbody> ();\r\n\t\tif (rd == null)\r\n\t\t\ttransform.position += direction * Time.deltaTime;\r\n\t\telse\r\n\t\t\tGetComponent<Rigidbody> ().velocity = direction;\r\n\t}\r\n}\r\n\r\n```\r\n\r\n### object that moves to another object\r\n\r\nAssign the `target` value with the actual target of the movement.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class MoveTo : MonoBehaviour {\r\n\r\n\tpublic Transform target;\r\n\tpublic float speed;\r\n\r\n\tvoid Update () {\r\n\t\ttransform.position = Vector3.MoveTowards (transform.position, target.position, speed * Time.deltaTime);\r\n\t}\r\n}\r\n\r\n```\r\n### Killed by bullet\r\n\r\nAs soon as the object collides with a bullet tagged as \"Bullet\", it is killed.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class FragileEnemy : MonoBehaviour {\r\n\tvoid OnCollisionEnter (Collision collision) {\r\n\t\tif (collision.collider.tag == \"Bullet\")\r\n\t\t\tDestroy (gameObject);\r\n\t}\r\n}\r\n```\r\n\r\n### Touch and gameover\r\n\r\nAs soon as the object touches the player, load gameover level.\r\nYou have to create a **gameover scene** and add it to your build settings.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Lethal : MonoBehaviour {\r\n\tpublic string gameoverSceneName;\r\n\tvoid OnCollisionEnter (Collision collision) {\r\n\t\tif (collision.collider.tag == \"Player\") {\r\n\t\t\tApplication.LoadLevel (gameoverSceneName);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n### Spawner\r\n\r\nSpawns an object from `archetype` Prefab every `interval` seconds, at a random position inside a circle of `radius`.\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class Spawner : MonoBehaviour {\r\n\r\n\tpublic GameObject archetype;\r\n\tpublic float interval;\r\n\tpublic float range;\r\n\r\n\tvoid Start () {\r\n\t\tStartCoroutine (SpawnRoutine ());\r\n\t}\r\n\r\n\tIEnumerator SpawnRoutine () {\r\n\t\twhile (true) {\r\n\t\t\tyield return new WaitForSeconds (interval);\r\n\t\t\tInstantiate (archetype, transform.position + Random.insideUnitSphere * range, Quaternion.identity);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}